{
  "imports": [
    "github.com/project-flogo/flow",
    "github.com/project-flogo/contrib/activity/noop",
    "github.com/tibco/flogo-general/src/app/General/activity/log",
    "github.com/tibco/wi-postgres/src/app/PostgreSQL/activity/query",
    "github.com/tibco/flogo-general/src/app/General/activity/mapper",
    "github.com/tibco/flogo-general/src/app/General/activity/actreply",
    "github.com/project-flogo/contrib/activity/actreturn",
    "github.com/tibco/wi-postgres/src/app/PostgreSQL/activity/insert",
    "github.com/tibco/flogo-general/src/app/General/trigger/rest",
    "github.com/project-flogo/contrib/function/coerce",
    "github.com/project-flogo/contrib/function/string",
    "github.com/project-flogo/contrib/function/array",
    "github.com/tibco/wi-postgres/src/app/PostgreSQL/connector/connection"
  ],
  "name": "customer-api",
  "description": "",
  "version": "1.0.0",
  "type": "flogo:app",
  "appModel": "1.1.1",
  "tags": [],
  "triggers": [
    {
      "ref": "#rest",
      "name": "tibco-wi-rest",
      "description": "Simple REST Trigger",
      "settings": {
        "port": 8080,
        "APISpecUpdate": true,
        "swagger": {
          "filename": "openapi3_0.json",
          "content": "data:application/json;base64,"
        },
        "swaggerVersion": "v3",
        "apiVersion": "1.0.0",
        "secureConnection": false,
        "serverKey": "",
        "caCertificate": ""
      },
      "id": "CustomerAPI",
      "handlers": [
        {
          "description": "Returns a customer object",
          "settings": {
            "APISpecPath": "/customer/{id}",
            "Method": "GET",
            "reqType": "application/json",
            "Path": "/customer/{id}",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:getCustomerById"
            },
            "input": {
              "pathParams": "=$.pathParams"
            },
            "output": {
              "code": "=$.code",
              "responseBody": "=$.responseBody"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": true,
            "message": ""
          },
          "schemas": {
            "reply": {
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "feSchemaMap": {}
              },
              "responseCodesSchema": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"},\"responseType\":{\"type\":\"string\"},\"responseSchema\":{\"type\":\"string\"}},\"required\":[\"code\",\"responseType\"]}}",
                "fe_metadata": "[{\"code\":200,\"responseType\":\"object\",\"responseSchema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"identifier\\\",\\\"example\\\":1},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"name\\\",\\\"example\\\":\\\"John Doe\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"email\\\",\\\"example\\\":\\\"john.doe@example.com\\\"},\\\"age\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"age\\\",\\\"example\\\":30},\\\"city\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"city\\\",\\\"example\\\":\\\"New York\\\"}}}\"},{\"code\":404,\"responseType\":\"string\"}]",
                "feSchemaMap": {}
              }
            },
            "output": {
              "pathParams": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}},\"required\":[\"id\"]}",
                "fe_metadata": "[{\"parameterName\":\"id\",\"type\":\"number\",\"required\":true}]"
              },
              "multipartFormData": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{}}",
                "feSchemaMap": {}
              },
              "multipartForm": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{}}",
                "fe_metadata": "[]",
                "feSchemaMap": {}
              }
            }
          },
          "name": "getCustomerById"
        },
        {
          "description": "Create a customer object",
          "settings": {
            "APISpecPath": "/customer",
            "Method": "POST",
            "reqType": "application/json",
            "Path": "/customer",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:createCustomer"
            },
            "input": {
              "body": "=$.body"
            },
            "output": {
              "code": "=$.code",
              "responseBody": "=$.responseBody"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": true,
            "message": ""
          },
          "schemas": {
            "reply": {
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "feSchemaMap": {}
              },
              "responseCodesSchema": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"},\"responseType\":{\"type\":\"string\"},\"responseSchema\":{\"type\":\"string\"}}}}",
                "fe_metadata": "[{\"code\":201,\"responseType\":\"object\",\"responseSchema\":\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"identifier\\\",\\\"example\\\":1},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"name\\\",\\\"example\\\":\\\"John Doe\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"email\\\",\\\"example\\\":\\\"john.doe@example.com\\\"},\\\"age\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"age\\\",\\\"example\\\":30},\\\"city\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"city\\\",\\\"example\\\":\\\"New York\\\"}}}\"}]",
                "feSchemaMap": {}
              }
            },
            "output": {
              "body": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}}",
                "feSchemaMap": {}
              },
              "multipartFormData": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{}}",
                "feSchemaMap": {}
              },
              "multipartForm": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{}}",
                "fe_metadata": "[]",
                "feSchemaMap": {}
              }
            }
          },
          "name": "createCustomer"
        }
      ]
    }
  ],
  "resources": [
    {
      "id": "flow:getCustomerById",
      "data": {
        "name": "getCustomerById",
        "description": "Returns a customer object",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "LogMessage",
            "type": "label",
            "label": "StartActivity to LogMessage"
          },
          {
            "id": 2,
            "from": "LogMessage",
            "to": "PostgreSQLQuery",
            "type": "label",
            "label": "LogMessage to PostgreSQLQuery"
          },
          {
            "id": 3,
            "from": "PostgreSQLQuery",
            "to": "MapperCustomer",
            "type": "expression",
            "label": "PostgreSQLQuery to Mapper",
            "value": "array.count($activity[PostgreSQLQuery].Output.records) > 0\r\n"
          },
          {
            "id": 4,
            "from": "MapperCustomer",
            "to": "ReplyToTrigger",
            "type": "label",
            "label": "MapperCustomer to ReplyToTrigger"
          },
          {
            "id": 5,
            "from": "ReplyToTrigger",
            "to": "Return200",
            "type": "label",
            "label": "ReplyToTrigger to Return200"
          },
          {
            "id": 6,
            "from": "PostgreSQLQuery",
            "to": "LogMessage1",
            "type": "exprOtherwise",
            "label": "PostgreSQLQuery to LogMessage1"
          },
          {
            "id": 7,
            "from": "LogMessage1",
            "to": "ReplyToTrigger1",
            "type": "label",
            "label": "LogMessage1 to ReplyToTrigger1"
          },
          {
            "id": 8,
            "from": "ReplyToTrigger1",
            "to": "Return404",
            "type": "label",
            "label": "ReplyToTrigger1 to Return404"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "LogMessage",
            "name": "LogMessage",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=string.concat('Retriving customer object for id: ',coerce.toString($flow.pathParams.id))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "PostgreSQLQuery",
            "name": "PostgreSQLQuery",
            "description": "This activity executes query on a PostgreSQL database",
            "settings": {
              "retryOnError": {
                "count": 0,
                "interval": 0
              }
            },
            "activity": {
              "ref": "#query",
              "input": {
                "Connection": "conn://20eb4ea8-6ace-438b-b017-85b14a02199f",
                "QueryName": "",
                "Schema": "public",
                "Query": "SELECT * FROM customer WHERE id=?id;",
                "manualmode": false,
                "Fields": [
                  {
                    "FieldName": "id",
                    "Type": "INTEGER",
                    "Selected": true,
                    "Parameter": true,
                    "isEditable": false
                  },
                  {
                    "FieldName": "name",
                    "Type": "VARCHAR",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  },
                  {
                    "FieldName": "email",
                    "Type": "VARCHAR",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  },
                  {
                    "FieldName": "age",
                    "Type": "INTEGER",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  },
                  {
                    "FieldName": "city",
                    "Type": "VARCHAR",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  }
                ],
                "RuntimeQuery": "",
                "State": "7e1d9449-56d9-4c2e-bc98-863db63b18e2SELECT * FROM customer WHERE id=?id;",
                "input": {
                  "mapping": {
                    "parameters": {
                      "id": "=$flow.pathParams.id"
                    }
                  }
                }
              },
              "schemas": {
                "input": {
                  "input": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"}}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"}}}}}",
                    "feSchemaMap": {}
                  }
                },
                "output": {
                  "Output": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"},\"city\":{\"type\":\"string\"}}}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"},\"city\":{\"type\":\"string\"}}}}}}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "MapperCustomer",
            "name": "MapperCustomer",
            "description": "Mapper Activity",
            "activity": {
              "ref": "#mapper",
              "input": {
                "input": {
                  "mapping": {
                    "id": "=$activity[PostgreSQLQuery].Output.records[0].id",
                    "name": "=$activity[PostgreSQLQuery].Output.records[0].name",
                    "email": "=$activity[PostgreSQLQuery].Output.records[0].email",
                    "age": "=$activity[PostgreSQLQuery].Output.records[0].age",
                    "city": "=$activity[PostgreSQLQuery].Output.records[0].city"
                  }
                }
              },
              "schemas": {
                "input": {
                  "input": "schema://Customer"
                },
                "output": {
                  "output": {
                    "type": "json",
                    "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"number\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"age\": {\n      \"type\": \"number\"\n    },\n    \"city\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                    "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"number\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"age\": {\n      \"type\": \"number\"\n    },\n    \"city\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "ReplyToTrigger",
            "name": "ReplyToTrigger",
            "description": "Reply back to the trigger and continue flow execution, it must be used only in the flow with the trigger configured.",
            "activity": {
              "ref": "#actreply",
              "input": {
                "reply": {
                  "mapping": {
                    "code": 200,
                    "responseBody": {
                      "body": "=$activity[MapperCustomer].output"
                    }
                  }
                }
              },
              "schemas": {
                "input": {
                  "reply": {
                    "type": "json",
                    "value": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}",
                    "fe_metadata": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "Return200",
            "name": "Return200",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 200,
                  "responseBody": {
                    "mapping": {
                      "body": "=$activity[MapperCustomer].output"
                    }
                  }
                }
              }
            }
          },
          {
            "id": "LogMessage1",
            "name": "LogMessage1",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "DEBUG",
                "flowInfo": false,
                "message": "=string.concat('No records returned for id: ',coerce.toString($flow.pathParams.id))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "ReplyToTrigger1",
            "name": "ReplyToTrigger1",
            "description": "Reply back to the trigger and continue flow execution, it must be used only in the flow with the trigger configured.",
            "activity": {
              "ref": "#actreply",
              "input": {
                "reply": {
                  "mapping": {
                    "code": 404,
                    "responseBody": {
                      "body": ""
                    }
                  }
                }
              },
              "schemas": {
                "input": {
                  "reply": {
                    "type": "json",
                    "value": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}",
                    "fe_metadata": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "Return404",
            "name": "Return404",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 404
                }
              }
            }
          }
        ],
        "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTG9nTWVzc2FnZSI6eyJ4IjoyMTUsInkiOjg4fSwiUG9zdGdyZVNRTFF1ZXJ5Ijp7IngiOjQwNiwieSI6OTF9LCJNYXBwZXJDdXN0b21lciI6eyJ4Ijo2NjEsInkiOjg4fSwiUmVwbHlUb1RyaWdnZXIiOnsieCI6ODU3LCJ5Ijo5NH0sIlJldHVybjIwMCI6eyJ4IjoxMDczLCJ5Ijo5Mn0sIkxvZ01lc3NhZ2UxIjp7IngiOjY1NSwieSI6MTk5fSwiUmVwbHlUb1RyaWdnZXIxIjp7IngiOjg1NCwieSI6MjAzfSwiUmV0dXJuNDA0Ijp7IngiOjEwOTIsInkiOjE5OH19",
        "metadata": {
          "input": [
            {
              "name": "pathParams",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"id\":{\"type\":\"number\"}}"
              }
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "responseBody",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}"
              }
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"pathParams\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"}},\"required\":[\"id\"]},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    },
    {
      "id": "flow:createCustomer",
      "data": {
        "name": "createCustomer",
        "description": "Create a customer object",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "LogMessage",
            "type": "label",
            "label": "StartActivity to LogMessage"
          },
          {
            "id": 2,
            "from": "LogMessage",
            "to": "GetNextSeqId",
            "type": "label",
            "label": "LogMessage to PostgreSQLQuery"
          },
          {
            "id": 3,
            "from": "GetNextSeqId",
            "to": "InsertCustomer",
            "type": "label",
            "label": "PostgreSQLQuery to PostgreSQLInsert"
          },
          {
            "id": 4,
            "from": "InsertCustomer",
            "to": "LogMessage1",
            "type": "label",
            "label": "PostgreSQLInsert to LogMessage1"
          },
          {
            "id": 5,
            "from": "LogMessage1",
            "to": "MapperCustomer",
            "type": "label",
            "label": "LogMessage1 to Mapper"
          },
          {
            "id": 6,
            "from": "MapperCustomer",
            "to": "ReplyToTrigger",
            "type": "label",
            "label": "Mapper to ReplyToTrigger"
          },
          {
            "id": 7,
            "from": "ReplyToTrigger",
            "to": "Return",
            "type": "label",
            "label": "ReplyToTrigger to Return"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "LogMessage",
            "name": "LogMessage",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false
              }
            }
          },
          {
            "id": "GetNextSeqId",
            "name": "GetNextSeqId",
            "description": "This activity executes query on a PostgreSQL database",
            "settings": {
              "retryOnError": {
                "count": 0,
                "interval": 0
              }
            },
            "activity": {
              "ref": "#query",
              "input": {
                "Connection": "conn://20eb4ea8-6ace-438b-b017-85b14a02199f",
                "QueryName": "",
                "Schema": "public",
                "Query": "SELECT nextval('customer_id_seq');",
                "manualmode": false,
                "Fields": [
                  {
                    "FieldName": "nextval",
                    "Type": "BIGINT",
                    "Selected": true,
                    "Parameter": false,
                    "isEditable": false
                  }
                ],
                "RuntimeQuery": "",
                "State": "d64337ae-49cc-41c9-8eee-2d8444b8f5e9SELECT nextval('customer_id_seq');"
              },
              "schemas": {
                "input": {
                  "input": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                    "feSchemaMap": {}
                  }
                },
                "output": {
                  "Output": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"nextval\":{\"type\":\"integer\"}}}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"nextval\":{\"type\":\"integer\"}}}}}}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "InsertCustomer",
            "name": "InsertCustomer",
            "description": "This activity executes insert on a PostgreSQL database",
            "settings": {
              "retryOnError": {
                "count": 0,
                "interval": 0
              }
            },
            "activity": {
              "ref": "#insert",
              "input": {
                "Connection": "conn://20eb4ea8-6ace-438b-b017-85b14a02199f",
                "QueryName": "",
                "Schema": "public",
                "Query": "INSERT INTO public.customer(\n\tid, name, email, age, city)\n\tVALUES (?id, ?name, ?email, ?age, ?city);",
                "manualmode": false,
                "Fields": [
                  {
                    "FieldName": "id",
                    "Type": "INTEGER",
                    "Selected": false,
                    "Parameter": true,
                    "isEditable": false,
                    "Value": true
                  },
                  {
                    "FieldName": "name",
                    "Type": "VARCHAR",
                    "Selected": false,
                    "Parameter": true,
                    "isEditable": false,
                    "Value": true
                  },
                  {
                    "FieldName": "email",
                    "Type": "VARCHAR",
                    "Selected": false,
                    "Parameter": true,
                    "isEditable": false,
                    "Value": true
                  },
                  {
                    "FieldName": "age",
                    "Type": "INTEGER",
                    "Selected": false,
                    "Parameter": true,
                    "isEditable": false,
                    "Value": true
                  },
                  {
                    "FieldName": "city",
                    "Type": "VARCHAR",
                    "Selected": false,
                    "Parameter": true,
                    "isEditable": false,
                    "Value": true
                  }
                ],
                "RuntimeQuery": "",
                "State": "8ce4d904-7a51-474b-a2b8-fd3d0d6e54c0INSERT INTO public.customer(\n\tid, name, email, age, city)\n\tVALUES (?id, ?name, ?email, ?age, ?city);",
                "input": {
                  "mapping": {
                    "values": [
                      {
                        "name": "=$flow.body.name",
                        "email": "=$flow.body.email",
                        "age": "=$flow.body.age",
                        "city": "=$flow.body.city",
                        "id": "=$activity[GetNextSeqId].Output.records[0].nextval"
                      }
                    ]
                  }
                }
              },
              "schemas": {
                "input": {
                  "input": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"},\"city\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"age\":{\"type\":\"integer\"},\"city\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                    "feSchemaMap": {}
                  }
                },
                "output": {
                  "Output": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                    "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "LogMessage1",
            "name": "LogMessage1",
            "description": "Simple Log Message Activity",
            "type": "iterator",
            "settings": {
              "iterate": "=$activity[InsertCustomer].Output.records",
              "accumulate": false
            },
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "Inserted customer into table",
                "logLevel": ""
              }
            }
          },
          {
            "id": "MapperCustomer",
            "name": "MapperCustomer",
            "description": "Mapper Activity",
            "activity": {
              "ref": "#mapper",
              "input": {
                "input": {
                  "mapping": {
                    "name": "=$flow.body.name",
                    "email": "=$flow.body.email",
                    "age": "=$flow.body.age",
                    "city": "=$flow.body.city",
                    "id": "=$activity[GetNextSeqId].Output.records[0].nextval"
                  }
                }
              },
              "schemas": {
                "input": {
                  "input": "schema://Customer"
                },
                "output": {
                  "output": {
                    "type": "json",
                    "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"number\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"age\": {\n      \"type\": \"number\"\n    },\n    \"city\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                    "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"number\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"age\": {\n      \"type\": \"number\"\n    },\n    \"city\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "ReplyToTrigger",
            "name": "ReplyToTrigger",
            "description": "Reply back to the trigger and continue flow execution, it must be used only in the flow with the trigger configured.",
            "activity": {
              "ref": "#actreply",
              "input": {
                "reply": {
                  "mapping": {
                    "code": 201,
                    "responseBody": {
                      "body": "=$activity[MapperCustomer].output"
                    }
                  }
                }
              },
              "schemas": {
                "input": {
                  "reply": {
                    "type": "json",
                    "value": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}",
                    "fe_metadata": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}",
                    "feSchemaMap": {}
                  }
                }
              }
            }
          },
          {
            "id": "Return",
            "name": "Return",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn"
            }
          }
        ],
        "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiTG9nTWVzc2FnZSI6eyJ4IjoyNjEsInkiOjk1fSwiR2V0TmV4dFNlcUlkIjp7IngiOjQ3NCwieSI6OTd9LCJJbnNlcnRDdXN0b21lciI6eyJ4Ijo2ODQsInkiOjk0fSwiTG9nTWVzc2FnZTEiOnsieCI6OTIxLCJ5Ijo5M30sIk1hcHBlckN1c3RvbWVyIjp7IngiOjExNTksInkiOjkwfSwiUmVwbHlUb1RyaWdnZXIiOnsieCI6MTM4OSwieSI6ODh9LCJSZXR1cm4iOnsieCI6MTU5OSwieSI6ODd9fQ==",
        "metadata": {
          "input": [
            {
              "name": "body",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}"
              }
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "responseBody",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}"
              }
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"body\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"identifier\",\"example\":1},\"name\":{\"type\":\"string\",\"description\":\"name\",\"example\":\"John Doe\"},\"email\":{\"type\":\"string\",\"description\":\"email\",\"example\":\"john.doe@example.com\"},\"age\":{\"type\":\"integer\",\"description\":\"age\",\"example\":30},\"city\":{\"type\":\"string\",\"description\":\"city\",\"example\":\"New York\"}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"responseBody\":{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    }
  ],
  "properties": [
    {
      "name": "PostgreSQL.postgres.Host",
      "type": "string",
      "value": "postgres-on-docker"
    },
    {
      "name": "PostgreSQL.postgres.Port",
      "type": "float64",
      "value": 5432
    },
    {
      "name": "PostgreSQL.postgres.Database_Name",
      "type": "string",
      "value": "demo"
    },
    {
      "name": "PostgreSQL.postgres.User",
      "type": "string",
      "value": "postgres"
    },
    {
      "name": "PostgreSQL.postgres.Password",
      "type": "string",
      "value": "SECRET:fpH4daVtTZuo/ur5JMgXhlRcfgT1tuAd"
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Open_Connections",
      "type": "float64",
      "value": 0
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Idle_Connections",
      "type": "float64",
      "value": 2
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Connection_Lifetime",
      "type": "string",
      "value": 0
    },
    {
      "name": "PostgreSQL.postgres.Maximum_Connection_Retry_Attempts",
      "type": "float64",
      "value": 3
    },
    {
      "name": "PostgreSQL.postgres.Connection_Retry_Delay",
      "type": "float64",
      "value": 5
    },
    {
      "name": "PostgreSQL.postgres.Connection_Timeout",
      "type": "float64",
      "value": 20
    }
  ],
  "schemas": {
    "Customer": {
      "type": "json",
      "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"number\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        },\n        \"age\": {\n            \"type\": \"number\"\n        },\n        \"city\": {\n            \"type\": \"string\"\n        }\n    }\n}",
      "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"number\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        },\n        \"age\": {\n            \"type\": \"number\"\n        },\n        \"city\": {\n            \"type\": \"string\"\n        }\n    }\n}"
    },
    "Customers": {
      "type": "json",
      "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"id\": {\n                \"type\": \"number\"\n            },\n            \"name\": {\n                \"type\": \"string\"\n            },\n            \"email\": {\n                \"type\": \"string\"\n            },\n            \"age\": {\n                \"type\": \"number\"\n            },\n            \"city\": {\n                \"type\": \"string\"\n            }\n        },\n        \"required\": [\n            \"id\",\n            \"name\",\n            \"email\",\n            \"age\",\n            \"city\"\n        ]\n    }\n}",
      "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"id\": {\n                \"type\": \"number\"\n            },\n            \"name\": {\n                \"type\": \"string\"\n            },\n            \"email\": {\n                \"type\": \"string\"\n            },\n            \"age\": {\n                \"type\": \"number\"\n            },\n            \"city\": {\n                \"type\": \"string\"\n            }\n        },\n        \"required\": [\n            \"id\",\n            \"name\",\n            \"email\",\n            \"age\",\n            \"city\"\n        ]\n    }\n}"
    },
    "Error": {
      "type": "json",
      "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"type\": {\n            \"type\": \"string\"\n        },\n        \"messageId\": {\n            \"type\": \"string\"\n        },\n        \"explanation\": {\n            \"type\": \"string\"\n        },\n        \"action\": {\n            \"type\": \"string\"\n        }\n    }\n}",
      "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"type\": {\n            \"type\": \"string\"\n        },\n        \"messageId\": {\n            \"type\": \"string\"\n        },\n        \"explanation\": {\n            \"type\": \"string\"\n        },\n        \"action\": {\n            \"type\": \"string\"\n        }\n    }\n}"
    }
  },
  "connections": {
    "20eb4ea8-6ace-438b-b017-85b14a02199f": {
      "id": "20eb4ea8-6ace-438b-b017-85b14a02199f",
      "name": "postgres",
      "ref": "#connection",
      "isGlobal": false,
      "settings": {
        "databaseType": "PostgreSQL",
        "name": "postgres",
        "description": "postgres",
        "host": "=$property[\"PostgreSQL.postgres.Host\"]",
        "port": "=$property[\"PostgreSQL.postgres.Port\"]",
        "databaseName": "=$property[\"PostgreSQL.postgres.Database_Name\"]",
        "user": "=$property[\"PostgreSQL.postgres.User\"]",
        "password": "=$property[\"PostgreSQL.postgres.Password\"]",
        "maxopenconnection": "=$property[\"PostgreSQL.postgres.Maximum_Open_Connections\"]",
        "maxidleconnection": "=$property[\"PostgreSQL.postgres.Maximum_Idle_Connections\"]",
        "connmaxlifetime": "=$property[\"PostgreSQL.postgres.Maximum_Connection_Lifetime\"]",
        "maxconnectattempts": "=$property[\"PostgreSQL.postgres.Maximum_Connection_Retry_Attempts\"]",
        "connectionretrydelay": "=$property[\"PostgreSQL.postgres.Connection_Retry_Delay\"]",
        "connectiontimeout": "=$property[\"PostgreSQL.postgres.Connection_Timeout\"]",
        "onprem": false,
        "tlsconfig": false,
        "tlsparam": "VerifyCA",
        "cacert": "",
        "clientcert": "",
        "clientkey": ""
      }
    }
  },
  "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS90aWJjby9mbG9nby1nZW5lcmFsL3NyYy9hcHAvR2VuZXJhbCIsImlkIjoiR2VuZXJhbCIsInZlcnNpb24iOiIxLjYuMiIsInRhZyI6IjEuNi4yLWIwMiIsIm5hbWUiOiJHZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwiLCJpc1VzZXJFeHRlbnNpb24iOmZhbHNlfSx7InJlZiI6ImdpdGh1Yi5jb20vdGliY28vd2ktcG9zdGdyZXMvc3JjL2FwcC9Qb3N0Z3JlU1FMIiwiaWQiOiJQb3N0Z3JlU1FMIiwidmVyc2lvbiI6IjIuNy4xIiwidGFnIjoiMi43LjEtYjAxIiwibmFtZSI6IlBvc3RncmVTUUwiLCJzM2xvY2F0aW9uIjoiVGliY28vUG9zdGdyZVNRTCIsImlzVXNlckV4dGVuc2lvbiI6ZmFsc2V9XQ==",
  "metadata": {
    "endpoints": [
      {
        "protocol": "http",
        "port": "8080",
        "spec": {
          "name": "customer-api",
          "version": "1.0.0"
        },
        "title": "CustomerAPI",
        "swagger": {
          "openapi": "3.0.0",
          "info": {
            "title": "customer-api",
            "version": "1.0.0",
            "description": "Simple REST Trigger"
          },
          "paths": {
            "/customer/{id}": {
              "get": {
                "summary": "getCustomerById",
                "operationId": "get_customer_id",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "description": "Request parameter",
                    "required": true,
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/schema1"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "",
                    "content": {
                      "text/plain": {
                        "schema": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Returns a customer object"
              }
            },
            "/customer": {
              "post": {
                "summary": "createCustomer",
                "operationId": "post_customer",
                "parameters": [],
                "responses": {
                  "201": {
                    "description": "",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/schema1"
                        }
                      }
                    }
                  }
                },
                "description": "Create a customer object",
                "requestBody": {
                  "description": "",
                  "required": false,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/schema1"
                      }
                    }
                  }
                }
              }
            }
          },
          "components": {
            "schemas": {
              "schema1": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "identifier",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "email",
                    "example": "john.doe@example.com"
                  },
                  "age": {
                    "type": "integer",
                    "description": "age",
                    "example": 30
                  },
                  "city": {
                    "type": "string",
                    "description": "city",
                    "example": "New York"
                  }
                }
              }
            }
          }
        }
      }
    ],
    "flogoVersion": "2.25.1"
  }
}